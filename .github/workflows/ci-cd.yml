#
#name: CI Pipeline
#
#on:
#  push:
#    branches:
#      - main  # Adjust this as needed
#  pull_request:
#    branches:
#      - main  # Adjust this as needed
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Build with Gradle
#        run: ./gradlew assemble
#
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test reports
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-reports
#          path: build/reports/
#
#  scan:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Ensures complete history for analysis (important for SonarQube analysis)
#          submodules: false
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'zulu'  # Changed to 'zulu' for better compatibility (you can revert to 'adopt' if preferred)
#
#      - name: Grant execute permissions to gradlew (optional for Windows)
#        if: runner.os != 'Windows'  # Only run this on non-Windows runners
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Run SonarQube Scan
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info
#name: CI Pipeline
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew assemble
#
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Cache Gradle build outputs
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle/buildOutput
#          key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-build-
#
#  owasp-dependency-check:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew
#
#      - name: Run OWASP Dependency-Check
#        run: ./gradlew dependencyCheckAnalyze
#
#      - name: Upload OWASP Dependency-Check report
#        uses: actions/upload-artifact@v3
#        with:
#          name: owasp-dependency-check-report
#          path: build/reports/dependency-check/dependency-check-report.html
#
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test reports
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-reports
#          path: build/reports/
#
#  scan:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          submodules: false
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'zulu'
#
#      - name: Grant execute permissions to gradlew
#        if: runner.os != 'Windows'
#        run: chmod +x ./gradlew
#
#      - name: Run SonarQube Scan
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info
#
#  owasp-zap:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#          cache: gradle
#
#      - name: Create ZAP rules file
#        run: |
#          mkdir -p .zap
#          cat << EOF > .zap/rules.tsv
#          10016	IGNORE	(Web Browser XSS Protection Not Enabled)
#          10020	IGNORE	(X-Frame-Options Header Not Set)
#          10021	IGNORE	(X-Content-Type-Options Header Missing)
#          10038	IGNORE	(Content Security Policy (CSP) Header Not Set)
#          EOF
#
#      - name: Start app
#        run: |
#          ./gradlew bootRun &
#          echo $! > ./app.pid
#
#      - name: Wait for application to be ready
#        timeout-minutes: 2
#        run: |
#          while ! nc -z localhost 8080; do
#            sleep 1
#          done
#
#      - name: ZAP Full Scan
#        uses: zaproxy/action-full-scan@v0.10.0
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          target: 'http://127.0.0.1:8080'  # Changed from localhost to 127.0.0.1
#          rules_file_name: '.zap/rules.tsv'
#          cmd_options: '-a -j'  # Added -j for Ajax spider support
#
#      - name: Upload ZAP Full Scan Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: zap-full-scan-report
#          path: |
#            report.html
#            report_json.json
#            report_md.md
#
#      - name: Stop app
#        if: always()
#        run: kill $(cat ./app.pid)

#jobs:
#  owasp-dependency-check:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew
#
#      - name: Run OWASP Dependency-Check
#        run: ./gradlew dependencyCheckAnalyze
#
#      - name: Upload OWASP Dependency-Check report
#        uses: actions/upload-artifact@v3
#        with:
#          name: owasp-dependency-check-report
#          path: build/reports/dependency-check/dependency-check-report.html

name: OWASP ZAP Security Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  owasp-zap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Create ZAP rules file
        run: |
          mkdir -p .zap
          cat << EOF > .zap/rules.tsv
          10016	IGNORE	(Web Browser XSS Protection Not Enabled)
          10020	IGNORE	(X-Frame-Options Header Not Set)
          10021	IGNORE	(X-Content-Type-Options Header Missing)
          10038	IGNORE	(Content Security Policy (CSP) Header Not Set)
          EOF

      - name: Start app
        run: |
          ./gradlew bootRun &  # Run app in the background
          echo $! > ./app.pid

      - name: Wait for application to be ready
        timeout-minutes: 5  # Increased to 5 minutes
        run: |
          while ! curl -s http://localhost:8080 > /dev/null; do
            echo "Waiting for app to start..."
            sleep 5  # Wait for 5 seconds before checking again
          done
          echo "Application is ready!"

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://127.0.0.1:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j'

      - name: Upload ZAP Full Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-full-scan-report
          path: |
            report.html
            report_json.json
            report_md.md

      - name: Stop app
        if: always()
        run: |
          kill $(cat ./app.pid)  # Stop the app after scan
