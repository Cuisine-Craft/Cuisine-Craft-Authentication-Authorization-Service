#name: CI Pipeline
#
#on:
#  push:
#    branches:
#      - main       # Adjust this as needed
#  pull_request:
#    branches:
#      - main       # Adjust this as needed
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Build with Gradle
#        run: ./gradlew assemble
#
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: test-reports
#          path: build/reports/
#
#  scan:
#    needs: test
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: SonarQube Scan
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: |
#          ./gradlew sonar \
#            -Dsonar.projectKey=Cuisine-Craft_Cuisine-Craft-Authentication-Authorization-Service_8f212176-f64e-4011-9f3e-0bf70756d09d \
#            -Dsonar.host.url=$SONAR_HOST_URL \
#            -Dsonar.login=$SONAR_TOKEN  # Ensures the gradlew script is executable
#
#
name: SonarQube Scan Only

on:
  push:
    branches:
      - main  # Trigger only on push to the main branch (or any branch you prefer)
  pull_request:
    branches:
      - main  # Trigger on PRs targeting the main branch (adjust as needed)

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Check out the code

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew  # Ensures the gradlew script is executable

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Pass the SonarQube token
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # SonarQube host URL
        run: |
          ./gradlew sonar \
            -Dsonar.projectKey=Cuisine-Craft_Cuisine-Craft-Authentication-Authorization-Service_8f212176-f64e-4011-9f3e-0bf70756d09d \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
