#
#name: CI Pipeline
#
#on:
#  push:
#    branches:
#      - main  # Adjust this as needed
#  pull_request:
#    branches:
#      - main  # Adjust this as needed
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Build with Gradle
#        run: ./gradlew assemble
#
#      - name: Cache Gradle dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Grant execute permissions to gradlew
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test reports
#        uses: actions/upload-artifact@v3
#        with:
#          name: test-reports
#          path: build/reports/
#
#  scan:
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Ensures complete history for analysis (important for SonarQube analysis)
#          submodules: false
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'zulu'  # Changed to 'zulu' for better compatibility (you can revert to 'adopt' if preferred)
#
#      - name: Grant execute permissions to gradlew (optional for Windows)
#        if: runner.os != 'Windows'  # Only run this on non-Windows runners
#        run: chmod +x ./gradlew  # Ensures the gradlew script is executable
#
#      - name: Run SonarQube Scan
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build sonar --info
name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew assemble

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Gradle build outputs
        uses: actions/cache@v4
        with:
          path: ~/.gradle/buildOutput
          key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-build-

  owasp-dependency-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run OWASP Dependency-Check
        run: ./gradlew dependencyCheckAnalyze

      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: owasp-dependency-check-report
          path: build/reports/dependency-check/dependency-check-report.html

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: build/reports/

  scan:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permissions to gradlew
        if: runner.os != 'Windows'
        run: chmod +x ./gradlew

      - name: Run SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

  owasp-zap:
    needs: test
    runs-on: ubuntu-latest
    services:
      zaproxy:
        image: owasp/zap2docker-stable  # Changed from owasp/zap to the correct image
        options: --privileged --cap-add=NET_ADMIN
        ports:
          - 8080:8080

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for ZAP to start
        run: |
          while ! curl -s http://localhost:8080; do
            echo "Waiting for ZAP to start..."
            sleep 5
          done

      - name: Start ZAP scan
        run: |
          curl -sSL https://raw.githubusercontent.com/zaproxy/zaproxy/master/docker/zap-init.sh | bash -s - -t start-scan

      - name: Upload OWASP ZAP scan results
        uses: actions/upload-artifact@v3
        with:
          name: owasp-zap-scan-results
          path: /zap/wrk/*.html
#
#  notify:
#    needs: [build, owasp-dependency-check, test, scan, owasp-zap]
#    runs-on: ubuntu-latest
#    if: failure()
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Send Slack notification on failure
#        uses: 8398a7/action-slack@v3
#        with:
#          status: failure
#          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
